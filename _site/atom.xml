<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-03-26T09:52:52+08:00</updated><id>http://localhost:4000/</id><title type="html">Beta-Demo-Field</title><subtitle>Work Hard! Play Hard!</subtitle><author><name>awesomeAJF</name></author><entry><title type="html">Few-shot Learning 总结</title><link href="http://localhost:4000/fewshotlearning/2019/03/26/few-shot-summery-01/" rel="alternate" type="text/html" title="Few-shot Learning 总结" /><published>2019-03-26T00:00:00+08:00</published><updated>2019-03-26T00:00:00+08:00</updated><id>http://localhost:4000/fewshotlearning/2019/03/26/few-shot-summery-01</id><content type="html" xml:base="http://localhost:4000/fewshotlearning/2019/03/26/few-shot-summery-01/">&lt;h2 id=&quot;n-ways-k-shot-few-shot-learning-问题的描述&quot;&gt;N ways K shot few-shot Learning 问题的描述&lt;/h2&gt;
&lt;p&gt;最终训练模型的效果需要达到，给模型之前完全没见过的  $N$ 个新类，每个新类中只有 $K$ 个样本。该模型需要能够通过利用这仅有的 $N \times K$  个样本，来对接下来给出的新样本进行分类。在 RelationNet work &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; 的问题描述中，将这给出的 $N \times K$ 个样本集称为 Support Set ，待分类的图片集称为 Query Set。&lt;/p&gt;
&lt;h2 id=&quot;常用的训练步骤&quot;&gt;常用的训练步骤&lt;/h2&gt;
&lt;h3 id=&quot;训练集中的类的样本不止-k-个样本&quot;&gt;训练集中的类的样本不止 $K$ 个样本&lt;/h3&gt;
&lt;p&gt;若我们使用数据集 $D$ 来训练模型， 而 $D$  中所有的类中 $a$ 个样本，eg. mini-imagenet 中每个类有 600 个样本，则  $a=600$。整体的训练过程可以分为多个 meta-learning 的过程，在每个 meta-learning 开始的时候，从训练集 $D$ 中随机抽取 $N$ 个类，每个类中抽取 $K$ 个样本做成 Support Set，除此之外，还从已经抽取得到每个类中，除已抽取的样本外，再抽取 $T$ 个样本作为 Query Set。之后，模型将会去学习如何根据 Support Set 的样本，来正确分类 Query Set 的样本。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：整个 Meta-Learning 的训练过程，模拟的是当模型真正遇到小样本学习的过程。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;该种方法的模型有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Relation Network&lt;/li&gt;
  &lt;li&gt;Matching Network&lt;/li&gt;
  &lt;li&gt;Prototypical Network&lt;/li&gt;
  &lt;li&gt;Siamese Network&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;用生成的方式补充小样本分类的方式&quot;&gt;用生成的方式补充小样本分类的方式&lt;/h3&gt;
&lt;p&gt;这种方式，主要分为两个组件，一方面是传统的 DCNN 分类器，如 ResNet，另一方面则是用于生成新的“假”样本的模型。其训练过程为，首先将 DCNN 在已有的大样本数据集上进行训练，得到一个在大样本数据集上表现良好的模型。之后，使用生成模型结合大样本数据集中类的样本和新类中的小样本，生成“假”的新类的图片，直到小样本的类中的样本数和大样本数据集中的类样本数目相同。最后，再使用之前训练的 DCNN 分类器在这些含有生成器生成的“假”样本的新类上进行训练，以达到小样本学习的目的。&lt;/p&gt;

&lt;p&gt;该种方法的模型有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Low-shot Learning via Covariance-Preserving Adversarial Augmentation Networks&lt;/li&gt;
  &lt;li&gt;Low-Shot Learning from Imaginary Data&lt;/li&gt;
  &lt;li&gt;Low-shot Visual Recognition by Shrinking and Hallucinating Features&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;训练集中的类的样本只有-k-个样本&quot;&gt;训练集中的类的样本只有 $K$ 个样本&lt;/h3&gt;
&lt;p&gt;在这种方式中，在训练的时候模型就只能使用每个类只含有 $K$ 个样本的数据集。&lt;/p&gt;

&lt;p&gt;该种方法的模型有：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Optimization as a Model for Few-Shot Learning&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;relation-network&quot;&gt;Relation Network&lt;/h2&gt;
&lt;p&gt;Relation Network 是 few-shot learning 中比较直观的模型。正规的来讲，他分为两部分，一部分是特征提取部分 &lt;code class=&quot;highlighter-rouge&quot;&gt;encoder&lt;/code&gt;，另一部分是计算相似度的&lt;code class=&quot;highlighter-rouge&quot;&gt;relation network&lt;/code&gt;。其中 &lt;code class=&quot;highlighter-rouge&quot;&gt;relation network&lt;/code&gt;，部分就是通过两层全连接层学到输入的两个拼接后的样本的相似度。其模型图如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tKfTcly1g1fya4rfhnj30w10grjsd.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注：源码中，5 ways 5 shot 的训练是取得 $5$ 个 Support 样本和 $10$ 个 Query 样本。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;prototypical-network&quot;&gt;Prototypical Network&lt;/h2&gt;
&lt;p&gt;这个模型简单的来说就是将图片 encoder 成向量之后，再将 Support Set 中的所有的样本求和取平均成一个向量后，再和 Query 的向量求欧式距离，以代表图片和类别的相似度。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tKfTcly1g1fyaw8etoj313x0f7t99.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;matching-network&quot;&gt;Matching Network&lt;/h2&gt;
&lt;p&gt;Matching Network 则是用 Query 的样本和 Support 的样本做 Attention 操作，最终得到该图片和其他图片的相似度。
&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tKfTcly1g1fya4rfhnj30w10grjsd.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;script type=&quot;text/x-mathjax-config&quot;&gt;MathJax.Hub.Config({tex2jax: {inlineMath:[['$','$']]}});&lt;/script&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;&lt;/script&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Learning to Compare：Relation Network for Few-Shot Learning CVPR 2018&amp;nbsp;&lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>awesomeAJF</name></author><category term="Few_Shot_Learning" /><summary type="html">N ways K shot few-shot Learning 问题的描述 最终训练模型的效果需要达到，给模型之前完全没见过的 $N$ 个新类，每个新类中只有 $K$ 个样本。该模型需要能够通过利用这仅有的 $N \times K$ 个样本，来对接下来给出的新样本进行分类。在 RelationNet work 1 的问题描述中，将这给出的 $N \times K$ 个样本集称为 Support Set ，待分类的图片集称为 Query Set。 常用的训练步骤 训练集中的类的样本不止 $K$ 个样本 若我们使用数据集 $D$ 来训练模型， 而 $D$ 中所有的类中 $a$ 个样本，eg. mini-imagenet 中每个类有 600 个样本，则 $a=600$。整体的训练过程可以分为多个 meta-learning 的过程，在每个 meta-learning 开始的时候，从训练集 $D$ 中随机抽取 $N$ 个类，每个类中抽取 $K$ 个样本做成 Support Set，除此之外，还从已经抽取得到每个类中，除已抽取的样本外，再抽取 $T$ 个样本作为 Query Set。之后，模型将会去学习如何根据 Support Set 的样本，来正确分类 Query Set 的样本。 Learning to Compare：Relation Network for Few-Shot Learning CVPR 2018&amp;nbsp;&amp;#8617;</summary></entry></feed>